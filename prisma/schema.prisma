// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model units {
  id           Int            @id @default(autoincrement())
  unitName     String         @unique
  users        users[]
  bagians      bagians[]
  budgetMaster budgetMaster[]
}

model users {
  id        Int          @id @default(autoincrement())
  email     String       @unique
  name      String?
  password  String
  active    Boolean      @default(true)
  unitId    Int
  unit      units        @relation(fields: [unitId], references: [id])
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  identity  identities[]
}

model identities {
  id        Int      @id @default(autoincrement())
  avatar    String?
  nik       String?
  birthdate String?
  region    String?
  author    users    @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

//finance
model bagians {
  id          Int      @id @default(autoincrement())
  orderNumber Int
  unit        units    @relation(fields: [unitId], references: [id])
  unitId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model banks {
  id          Int      @id @default(autoincrement())
  bankName    String
  bankAccount String
  branch      String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model fiscalYears {
  id              Int               @id @default(autoincrement())
  name            String
  year            Int
  status          Boolean           @default(false)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  subMasterBudget subMasterBudget[]
}

model budgetMaster {
  id              Int               @id @default(autoincrement())
  level           Int
  groupInOut      String
  unit            units             @relation(fields: [unitId], references: [id])
  unitId          Int
  budgetCode      String
  description     String?           @db.VarChar(200)
  subMasterBudget subMasterBudget[]
}

enum BudgetType {
  D
  K
}

model subMasterBudget {
  id                Int          @id @default(autoincrement())
  fiscalYear        fiscalYears  @relation(fields: [fiscalYearId], references: [id])
  fiscalYearId      Int
  budgetMaster      budgetMaster @relation(fields: [budgetMasterId], references: [id])
  budgetMasterId    Int
  budgetSubCode     String
  subDescription    String       @db.VarChar(200)
  jan               Int
  feb               Int
  mar               Int
  apr               Int
  may               Int
  jun               Int
  jul               Int
  aug               Int
  sep               Int
  oct               Int
  nov               Int
  dec               Int
  total             BigInt
  budgetType        BudgetType
  budgetDescription String
}
